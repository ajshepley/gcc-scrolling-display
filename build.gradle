plugins {
    id 'java'
    id 'c'
}

// TODO: Clean up this mess of a grade buildfile.

group 'com.github.ajshepley.default'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

apply plugin: 'java'
apply plugin: "c"

repositories {
    mavenCentral()
    flatDir {
        dir 'lib'
    }
}

ext {
    testngVersion = '6.14.3'
}

configurations {
    externalLibs
}

dependencies {
    compile ':core'
    compile ':serial'
    compile ':gluegen-rt'
    compile ':gluegen-rt-natives-windows-amd64'
    compile ':jogl-all'
    compile ':jogl-all-natives-windows-amd64'
//    externalLibs files('jSSC-2.8.dll')
    compile ':jssc'
//    compile group: 'org.scream3r', name: 'jssc', version: '2.8.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'org.testng', name: 'testng', version: "${testngVersion}"
}

test {
    jvmArgs = ['-Djava.library.path=./lib']
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.ajshepley.MainSketch'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

test {
    useTestNG() {
        useDefaultListeners = true
    }

    testLogging.showStandardStreams = true

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " output: " + event.message )
    }
}

defaultTasks 'clean', 'build', 'test', 'jar'
